using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace vCommands.Utilities
{
    /// <summary>
    /// Represents the method that will handle an event for a specific type of sender when the event provides data.
    /// </summary>
    /// <typeparam name="TObj">The type of the source of the event.</typeparam>
    /// <typeparam name="TEventArgs">The type of the event data generated by the event.</typeparam>
    /// <param name="sender">The source of the event.</param>
    /// <param name="e">An object that contains the event data.</param>
    public delegate void TypedEventHandler<TObj, TEventArgs>(TObj sender, TEventArgs e)
        where TEventArgs : EventArgs;

    /// <summary>
    /// Represents the method that will handle an event for a specific type of sender that has no data.
    /// </summary>
    /// <typeparam name="TObj">The type of the source of the event.</typeparam>
    /// <param name="sender">The source of the event.</param>
    /// <param name="e">An object that contains no event data.</param>
    public delegate void TypedEventHandler<TObj>(TObj sender, EventArgs e);
}
